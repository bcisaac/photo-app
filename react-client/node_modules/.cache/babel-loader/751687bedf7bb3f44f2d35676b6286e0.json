{"ast":null,"code":"function getCookie(key){var name=key+\"=\";var decodedCookie=decodeURIComponent(document.cookie);var ca=decodedCookie.split(';');for(var i=0;i<ca.length;i++){var c=ca[i];while(c.charAt(0)===' '){c=c.substring(1);}if(c.indexOf(name)===0){return c.substring(name.length,c.length);}}return\"\";}function setCookie(name,val){var d=new Date();var days=365;d.setTime(d.getTime()+days*24*60*60*1000);var expires=\"expires=\"+d.toUTCString();document.cookie=name+\"=\"+val+\";\"+expires;}export function setAccessTokenCookie(username,password,callback){var postData={\"username\":username,\"password\":password};fetch(\"/api/token/\",{method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify(postData)}).then(function(response){return response.json();}).then(function(data){var token=data.access_token;setCookie('access_token_cookie',token);callback();});}export function getAccessTokenCookie(){return getCookie('access_token_cookie');// || token;\n}export function getHeaders(){var access_token_cookie=getCookie('access_token_cookie');var csrf_access_token=getCookie('csrf_access_token');var headers;if(csrf_access_token){headers={'Content-Type':'application/json','X-CSRF-TOKEN':csrf_access_token};}else if(access_token_cookie){headers={'Content-Type':'application/json','Authorization':'Bearer '+access_token_cookie};}else{console.error('Neither access_token_cookie nor csrf_access_token found');}return headers;}","map":{"version":3,"sources":["/Users/isaacconner/Dev/Class/CS396/hw/photo-app/react-client/src/utils.js"],"names":["getCookie","key","name","decodedCookie","decodeURIComponent","document","cookie","ca","split","i","length","c","charAt","substring","indexOf","setCookie","val","d","Date","days","setTime","getTime","expires","toUTCString","setAccessTokenCookie","username","password","callback","postData","fetch","method","headers","body","JSON","stringify","then","response","json","data","token","access_token","getAccessTokenCookie","getHeaders","access_token_cookie","csrf_access_token","console","error"],"mappings":"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","sourcesContent":["function getCookie (key) {\n    let name = key + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}\n\nfunction setCookie(name, val) {\n    const d = new Date();\n    const days = 365;\n    d.setTime(d.getTime() + (days*24*60*60*1000));\n    const expires = \"expires=\"+ d.toUTCString();\n    document.cookie = name + \"=\" + val + \";\" + expires;\n  }\n\nexport function setAccessTokenCookie(username, password, callback) {\n    const postData = {\n        \"username\": username,\n        \"password\": password\n    };\n    fetch(\"/api/token/\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(postData)\n        })\n        .then(response => response.json())\n        .then(data => {\n            const token = data.access_token;\n            setCookie('access_token_cookie', token); \n            callback();\n        });\n}\n\nexport function getAccessTokenCookie () {\n    return getCookie('access_token_cookie'); // || token;\n}\n\nexport function getHeaders () {\n    const access_token_cookie = getCookie('access_token_cookie');\n    const csrf_access_token = getCookie('csrf_access_token');\n    let headers;\n    if (csrf_access_token) {\n        headers = {\n            'Content-Type': 'application/json',\n            'X-CSRF-TOKEN': csrf_access_token\n        };\n    } else if (access_token_cookie) {\n        headers = {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + access_token_cookie\n        };\n    } else {\n        console.error('Neither access_token_cookie nor csrf_access_token found')\n    }\n    return headers;\n}"]},"metadata":{},"sourceType":"module"}